<controls:MetroWindow x:Class="ArmyBuilder.Windows.MainWindow" 
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
                      xmlns:views="clr-namespace:ArmyBuilder.Windows.Views" 
                      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                      xmlns:models="clr-namespace:ArmyBuilder.Core.Models;assembly=ArmyBuilder.Core" 
                      xmlns:core="clr-namespace:ArmyBuilder.Core;assembly=ArmyBuilder.Core"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:views1="clr-namespace:ArmyBuilder.UWP.Views"
                      DataContext="{StaticResource MainViewModel}" TitleAlignment="Center"
                      WindowStartupLocation="CenterScreen" mc:Ignorable="d" Title="{Binding SelectedArmyList.Name, FallbackValue='Armybuilder', TargetNullValue='Armybuilder'}" Height="800" Width="1200" >

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <Button Content="Create List" Command="{Binding AddListCommand}"/>
            <Button Content="Save List"  Command="{Binding SaveListCommand}" CommandParameter="{Binding SelectedArmyList}"/>
            <Button Content="Delete List" Command="{Binding RemoveListCommand}" CommandParameter="{Binding SelectedArmyList}"/>
            <Button Content="Add Unit" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                    <ei:ChangePropertyAction TargetObject="{Binding ElementName=UnitFlyout}" PropertyName="IsOpen" Value="True"/>
                </i:EventTrigger>
                    </i:Interaction.Triggers>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Click" SourceObject="{Binding ElementName=CreateListButton}">
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=ArmyListsListView}" PropertyName="Visibility" Value="Collapsed"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=ManageArmyListPanel}" PropertyName="Visibility" Value="Collapsed"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=EditArmyListView}" PropertyName="Visibility" Value="Visible"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=EditArmyListPanel}" PropertyName="Visibility" Value="Visible"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Click" SourceObject="{Binding ElementName=EditListButton}">
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=ArmyListsListView}" PropertyName="Visibility" Value="Collapsed"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=ManageArmyListPanel}" PropertyName="Visibility" Value="Collapsed"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=EditArmyListView}" PropertyName="Visibility" Value="Visible"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=EditArmyListPanel}" PropertyName="Visibility" Value="Visible"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Click" SourceObject="{Binding ElementName=BackButton}">
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=ArmyListsListView}" PropertyName="Visibility" Value="Visible"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=ManageArmyListPanel}" PropertyName="Visibility" Value="Collapsed"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=EditArmyListView}" PropertyName="Visibility" Value="Collapsed"/>
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=EditArmyListPanel}" PropertyName="Visibility" Value="Visible"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Click" SourceObject="{Binding ElementName=AddDetachmentButton}">
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=AddDetachmentMenu}" PropertyName="IsOpen" Value="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

<Grid>
    <controls:HamburgerMenu ItemsSource="{Binding ArmyLists}" SelectedItem="{Binding SelectedArmyList}" OptionsItemTemplate="{StaticResource HamburgerMenuItemTemplate}" >

        <controls:HamburgerMenu.Content>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>


                <!--<ListView x:Name="ArmyListsListView"  BorderThickness="0"/>-->

                <Grid x:Name="EditArmyListView">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Expander Grid.Row="1" Grid.Column="0" ExpandDirection="Left" Header="Available Units" IsExpanded="False">
                        <Expander.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="-90"/>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                            </DataTemplate>
                        </Expander.HeaderTemplate>
                        <ListView x:Name="AvailableUnitsListView"   ItemsSource="{Binding Source={StaticResource AvailableUnitsCollection}}" >
                            <ListView.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate DataType="core:ForceOrgSlot">
                                            <Grid Margin="0,0,0,2" >
                                                <Border BorderThickness="0,0,0,2" BorderBrush="Black"/>
                                                <TextBlock Margin="5,0,0,2" FontSize="18" Text="{Binding Name}" />
                                                <!--<TextBlock Margin="5,0,0,2" FontSize="18" Text="{Binding Converter={StaticResource ForceOrgGroupToText}}" />-->
                                            </Grid>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Expander Header="{Binding Name}" IsExpanded="False" d:DataContext="{d:DesignInstance CollectionViewGroup}" >
                                                            <Expander.Resources>
                                                                <CollectionViewSource x:Key="HoursByProjectCollection" Source="{Binding Items}" IsLiveGroupingRequested="True" IsLiveSortingRequested="True">
                                                                    <CollectionViewSource.GroupDescriptions>
                                                                        <PropertyGroupDescription PropertyName="ForceOrgSlot" />
                                                                    </CollectionViewSource.GroupDescriptions>
                                                                </CollectionViewSource>
                                                            </Expander.Resources>
                                                            <ListView ItemsSource="{Binding Source={StaticResource HoursByProjectCollection}}">
                                                                <ListView.GroupStyle>
                                                                    <GroupStyle>
                                                                        <GroupStyle.HeaderTemplate>
                                                                            <DataTemplate DataType="{x:Type CollectionViewGroup}" >

                                                                            </DataTemplate>
                                                                        </GroupStyle.HeaderTemplate>

                                                                        <GroupStyle.ContainerStyle>
                                                                            <Style TargetType="{x:Type GroupItem}">
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate>
                                                                                            <Expander Header="{Binding Name}" IsExpanded="False" d:DataContext="{d:DesignInstance CollectionViewGroup}">

                                                                                                <ItemsPresenter  />

                                                                                            </Expander>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </GroupStyle.ContainerStyle>
                                                                    </GroupStyle >
                                                                </ListView.GroupStyle>
                                                                <ListView.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <Button Content="{Binding Name}" Command="{Binding AddUnitEntryToDetachmentCommand, Source={StaticResource MainViewModel}}" CommandParameter="{Binding}">

                                                                        </Button>
                                                                    </DataTemplate>
                                                                </ListView.ItemTemplate>
                                                            </ListView>
                                                        </Expander>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </ListView.GroupStyle>
                        </ListView>
                    </Expander>
                    
                    <Grid Grid.Row="1" Grid.Column="1">


                        <!--<Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Expander Header="Add a Detachment" ExpandDirection="Down">
                            
                        </Expander>-->

                        <ListView Grid.Row="1" SelectedItem="{Binding SelectedDetachment}" ItemsSource="{Binding SelectedArmyList.Detachments}" BorderThickness="0" ItemTemplateSelector="{StaticResource DetachmentDataTemplateSelector}">
                            <!--<ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>-->
                        </ListView>
                    </Grid>

                    <!--<TreeView Grid.Row="1" Grid.Column="2" BorderThickness="0"/>-->
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding SelectedUnit.UnitEntry.Name}"/>
                    <views1:UnitEditor Grid.Row="1" Grid.Column="2" DataContext="{Binding SelectedUnit}"/>
                </Grid>
            </Grid>
        </controls:HamburgerMenu.Content>
    </controls:HamburgerMenu>

    <controls:FlyoutsControl Background="Transparent">
        <controls:Flyout x:Name="UnitFlyout" Theme="Accent" Position="Top" Header="Add a Detachment" Background="Transparent">
            <ListView ItemsSource="{Binding Armies}">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="models:Army">
                        <Expander Header="{Binding Name}" IsExpanded="True" Visibility="{Binding Detachments, Converter={StaticResource ListCountToVisiblityConverter}}">
                            <ListBox ItemsSource="{Binding Detachments}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="models:Detachment" >

                                        <Button Style="{StaticResource MetroFlatButton}" Content="{Binding Name}" Command="{Binding AddDetachmentToListCommand, Source={StaticResource MainViewModel}}" CommandParameter="{Binding}" BorderThickness="0" controls:ButtonHelper.CornerRadius="0">
                                            <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=AddDetachmentMenu}" PropertyName="IsOpen" Value="False"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                                        </Button>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Expander>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MetroListBoxItem}">
                        <Style.Triggers>
                            <!--Hide Groups if there are no items in them-->
                            <DataTrigger Binding="{Binding Detachments.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListView>
        </controls:Flyout>
    </controls:FlyoutsControl>
</Grid>
</controls:MetroWindow>