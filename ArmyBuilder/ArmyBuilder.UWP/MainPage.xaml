<Page x:Class="ArmyBuilder.UWP.MainPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:views="using:ArmyBuilder.UWP.Views" xmlns:utility="using:ArmyBuilder.Utility" xmlns:core="using:Microsoft.Xaml.Interactions.Core" xmlns:interactivity="using:Microsoft.Xaml.Interactivity" xmlns:uwp="using:ArmyBuilder.UWP" d:DesignWidth="1200" d:DesignHeight="800" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" mc:Ignorable="d" DataContext="{StaticResource MainViewModel}" Loading="MainPage_OnLoading">

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Visibility="{Binding SelectedDetachment, TargetNullValue=Collapsed, FallbackValue=Visible, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" x:Name="AddUnitButton" Icon="Add" Label="Add Unit" DataContext="{Binding CurrentArmyListViewModel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutSubItem Text="HQ" utility:UnitFlyoutMenuExtension.MyItems="{Binding HqUnits}" />
                        <MenuFlyoutSubItem Text="Troop" utility:UnitFlyoutMenuExtension.MyItems="{Binding TroopUnits}" />
                        <MenuFlyoutSubItem Text="Elite" utility:UnitFlyoutMenuExtension.MyItems="{Binding EliteUnits}" />
                        <MenuFlyoutSubItem Text="Fast Attack" utility:UnitFlyoutMenuExtension.MyItems="{Binding FastAttackUnits}" />
                        <MenuFlyoutSubItem Text="Heavy Support" utility:UnitFlyoutMenuExtension.MyItems="{Binding HeavySupportUnits}" />
                        <MenuFlyoutSubItem Text="Lord of War" utility:UnitFlyoutMenuExtension.MyItems="{Binding LordOfWarUnits}" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <!--<AppBarButton Visibility="{Binding TargetNullValue=Collapsed}" x:Name="AdddUnitButton" Icon="Add" Label="Add Unit" DataContext="{Binding CurrentArmyListViewModel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <AppBarButton.Flyout>
                    <Flyout x:Name="UnitFlyout" utility:FlyoutHelpers.Parent="{Binding ElementName=AdddUnitButton}"
                utility:FlyoutHelpers.IsOpen="{Binding IsUnitFlyoutOpened, Mode=TwoWay}">
                        
                        <ListView x:Name="ArmyUnitListView" ItemsSource="{Binding Source={StaticResource ArmyUnitCollection}}"  SelectionMode="Single">
                            <ListView.GroupStyle>
                                <GroupStyle HidesIfEmpty="True" HeaderTemplate="{StaticResource ArmyListDataGroupTemplate}" />
                            </ListView.GroupStyle>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="SelectionChanged">
                                    <core:InvokeCommandAction Command="{Binding AddUnitCommand}" CommandParameter="{Binding SelectedItem, ElementName=ArmyUnitListView}" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>-->
            <AppBarButton Visibility="{Binding TargetNullValue=Collapsed, FallbackValue=Visible, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" DataContext="{Binding CurrentArmyListViewModel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" x:Name="ExportListButton" Icon="Save" Label="Export List" Command="{Binding ExportToTextFileCommand}" />

        </CommandBar>
    </Page.BottomAppBar>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowSizeStates">
                <VisualState x:Name="WideScreen">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="775" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="UnitListView.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="UnitListView.SelectionMode" Value="Single" />
                        <Setter Target="UnitListView.IsItemClickEnabled" Value="False" />
                        <Setter Target="MainSplitView.DisplayMode" Value="Inline" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="SmallScreen">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="UnitListView.SelectionMode" Value="None" />
                        <Setter Target="UnitListView.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="UnitListView.IsItemClickEnabled" Value="True" />
                        <Setter Target="MainSplitView.DisplayMode" Value="CompactOverlay" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView x:Name="MainSplitView" IsPaneOpen="True" DisplayMode="Inline" CompactPaneLength="70" OpenPaneLength="400">
            <SplitView.Pane>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.RowSpan="2" VerticalAlignment="Top">
                        <AppBarButton Icon="List" Label="Army Lists" x:Name="MenuButton">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Click">
                                    <core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=ArmyListsGrid}" Value="Visible" />
                                    <core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=CurrentArmyListGrid}" Value="Collapsed" />
                                    <core:ChangePropertyAction PropertyName="IsPaneOpen" TargetObject="{Binding ElementName=MainSplitView}" Value="True" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </AppBarButton>
                        <AppBarButton Icon="List" Label="{Binding SelectedArmyList.Name, FallbackValue='No List'}" Visibility="{Binding SelectedArmyList, FallbackValue=Visible, TargetNullValue=Collapsed}">
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Click">
                                    <core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=ArmyListsGrid}" Value="Collapsed" />
                                    <core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=CurrentArmyListGrid}" Value="Visible" />
                                    <core:ChangePropertyAction PropertyName="IsPaneOpen" TargetObject="{Binding ElementName=MainSplitView}" Value="True" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </AppBarButton>
                    </StackPanel>

                    <Grid x:Name="ArmyListsGrid" Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ListView x:Name="ArmyListsListView" ItemsSource="{Binding Source={StaticResource ArmyListCollection}}" ItemTemplate="{StaticResource ArmyListTemplate}" SelectedItem="{Binding SelectedArmyList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single" Margin="10" Grid.Column="1">
                            <ListView.GroupStyle>
                                <GroupStyle HidesIfEmpty="True" HeaderTemplate="{StaticResource ArmyListGroupTemplate}" />
                            </ListView.GroupStyle>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="SelectionChanged">
                                    <core:InvokeCommandAction Command="{Binding EditSelectedListCommand}" />
                                    <core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=ArmyListsGrid}" Value="Collapsed" />
                                    <core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=CurrentArmyListGrid}" Value="Visible" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </ListView>
                        <views:NewArmyListView Grid.Row="1" />
                    </Grid >

                    <Grid x:Name="CurrentArmyListGrid" Grid.Column="1" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>


                        <TextBlock Grid.Row="0" Margin="10">
                            <Run FontSize="18" Text="{Binding CurrentArmyListViewModel.PointsRemaining}"/>
                        </TextBlock>
                        <TextBlock Grid.Row="1" Margin="10, 10, 0, 10">
                            <Run Text="points remaining of"/>
                            <Run Text="{Binding SelectedArmyList.PointsLimit}"/>
                        </TextBlock>

                        <ListView  Grid.Row="2" ItemTemplate="{StaticResource DetachmentListItemTemplate}" ItemsSource="{Binding SelectedArmyList.Detachments}" SelectedItem="{Binding CurrentArmyListViewModel.SelectedDetachment}">
                            <ListView.Header>
                                <ComboBox x:Name="NewDetachmentComboBox" PlaceholderText="Select a detachment to add" ItemsSource="{Binding CurrentArmyListViewModel.ArmyList.Army.Detachments}">
                                    <interactivity:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="SelectionChanged">

                                            <core:InvokeCommandAction Command="{Binding CurrentArmyListViewModel.AddDetachmentCommand, Source={StaticResource MainViewModel}}" CommandParameter="{Binding SelectedItem, ElementName=NewDetachmentComboBox}"/>
                                            <core:ChangePropertyAction TargetObject="{Binding ElementName=NewDetachmentComboBox}" PropertyName="SelectedIndex" Value="-1"/>


                                        </core:EventTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>
                                </ComboBox>
                            </ListView.Header>
                        </ListView>

                        <!--<views:ForceOrgView Grid.Row="5" DataContext="{Binding CurrentArmyListViewModel, Source={StaticResource MainViewModel}}" x:Name="ForceOrgPanel" MinHeight="85" />-->


                    </Grid>
                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                <Grid Visibility="{Binding CurrentArmyListViewModel, Source={StaticResource MainViewModel}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue=Collapsed}" DataContext="{Binding CurrentArmyListViewModel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40*" />
                        <ColumnDefinition Width="60*" />
                    </Grid.ColumnDefinitions>

                    <ListView x:Name="UnitListView"  IsRightTapEnabled="True" IsItemClickEnabled="True" ItemTemplate="{StaticResource ArmyListDataTemplate}" ItemsSource="{Binding Source={StaticResource ArmyListDataCollection}}" SelectedItem="{Binding SelectedUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsMultiSelectCheckBoxEnabled="False" SelectionChanged="UnitListView_SelectionChanged" Margin="10,10,5,0" SelectionMode="Single" ItemClick="UnitListView_ItemClick">
                        <ListView.GroupStyle>
                            <GroupStyle HidesIfEmpty="True" HeaderTemplate="{StaticResource ArmyListDataGroupTemplate}" />
                        </ListView.GroupStyle>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <views:UnitEditor x:Name="UnitEditor" Grid.Column="1" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,10,10,0" DataContext="{Binding CurrentArmyListViewModel.SelectedUnit, Source={StaticResource MainViewModel}}" />
                </Grid>
            </SplitView.Content>
        </SplitView>
    </Grid>
</Page>

<!--<ListView x:Name="listEmp" 
	ItemsSource="{Binding Employees, UpdateSourceTrigger=PropertyChanged}" 
	Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
	SelectedValue="{Binding SelectedEmployee, 
	UpdateSourceTrigger=PropertyChanged}">
    <ListView.View>
        <GridView>
            <GridViewColumn DisplayMemberBinding="{Binding ID}" 
			Header="ID" Width="40" />
            <GridViewColumn DisplayMemberBinding="{Binding Name}" 
			Header="Name" Width="100"/>
        </GridView>
    </ListView.View>
</ListView>-->
