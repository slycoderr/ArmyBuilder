<Application x:Class="ArmyBuilder.XMLEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ArmyBuilder.XMLEditor"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:core="clr-namespace:ArmyBuilder.Core;assembly=ArmyBuilder.Core" 
             xmlns:models="clr-namespace:ArmyBuilder.Core.Models;assembly=ArmyBuilder.Core"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
            <!-- Accent and AppTheme setting -->
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        </ResourceDictionary.MergedDictionaries>
            
        <local:MainViewModel x:Key="MainViewModel"/>
            <local:NullToBoolConverter x:Key="NullToBoolConverter"/>
            
            <ObjectDataProvider x:Key="ForceOrgCollection" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="core:ForceOrgSlot"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="EquipmentTypeCollection" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="core:EquipmentType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style TargetType="ListView">
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="HasItems"
                         Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListView">
                                    <TextBlock Text="No items..."/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <DataTemplate x:Key="ArmyBuilderGenericModelTemplate">
                <TextBlock TextWrapping="WrapWithOverflow">
                    <Run Text="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:000} -'}"/>
                    <Run Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </TextBlock>
            </DataTemplate>

            <HierarchicalDataTemplate x:Key="ArmyBuilderGenericModelTemplate2" >

            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="DefaultEquipmentTemplate" DataType="models:Equipment" ItemsSource="{Binding ReplacementOptions}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button Content="X" Focusable="False" Command="{Binding RemoveDefaultEquipmentCommand, Source={StaticResource MainViewModel}}" CommandParameter="{Binding}"/>
                    <TextBlock  Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0" TextWrapping="WrapWithOverflow">
                    <Run Text="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:000} -'}"/>
                    <Run Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </TextBlock>
                </Grid>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="UpgradeEquipmentTemplate" DataType="models:Equipment" ItemsSource="{Binding ReplacementOptions}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button Focusable="False" Content="X" Command="{Binding RemoveUpgradeCommand, Source={StaticResource MainViewModel}}" CommandParameter="{Binding}"/>
                    <TextBlock  Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0" TextWrapping="WrapWithOverflow">
                        <Run Text="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:000} -'}"/>
                        <Run Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </TextBlock>
                </Grid>
            </HierarchicalDataTemplate>

            <Style x:Key="AppBarButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Margin" Value="0,0,0,0"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <controls:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (controls:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource AccentColorBrush3}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="{x:Null}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                    <Setter Property="BorderThickness" TargetName="Border" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.0"/>
                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="StackPanel" x:Key="AppBarPanelStyle">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="5,4,10,5"/>
                <Setter Property="ZIndex" Value="1"/>
            </Style>

            <Style x:Key="AppBarIconStyle" TargetType="iconPacks:PackIconModern">
                <Setter Property="Width" Value="13"/>
                <Setter Property="Height" Value="13"/>
                <Setter Property="Margin" Value="2.5,0,2.5,0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>

